name: Release
on:
  workflow_dispatch:
  workflow_call:
  push:
    paths:
      - 'src/**'
      - 'yarn.lock'
    branches:
      - 'master'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CI: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 20

    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Verify dependency integrity
        run: yarn audit || true

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

      - name: Build
        run: yarn build

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: DEV.ME Team
          GIT_AUTHOR_EMAIL: support@dev.me
          GIT_COMMITTER_NAME: DEV.ME Team
          GIT_COMMITTER_EMAIL: support@dev.me
        run: |
          # Install semantic-release and required plugins
          npm i -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog @semantic-release/npm @semantic-release/commit-analyzer

          # Run semantic-release
          npx semantic-release --debug 2>&1 | tee release-output.txt

          # Extract version and tag info from release output
          if grep -q "Published release" release-output.txt; then
            echo "release_published=true" >> $GITHUB_OUTPUT
            VERSION=$(grep -oP 'Published release \K[0-9]+\.[0-9]+\.[0-9]+' release-output.txt | head -1)
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          else
            echo "release_published=false" >> $GITHUB_OUTPUT
          fi

      - name: Add Release Summary
        if: always()
        run: |
          echo "## 📦 Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ steps.semantic_release.outputs.release_published }}" == "true" ]]; then
            echo "### ✅ Release Published Successfully!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- **Version:** \`${{ steps.semantic_release.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
            echo "- **Tag:** \`${{ steps.semantic_release.outputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
            echo "- **Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
            echo "- **Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
            echo "- [NPM Package](https://www.npmjs.com/package/@devmehq/email-validator-js/v/${{ steps.semantic_release.outputs.version }})" >> $GITHUB_STEP_SUMMARY
            echo "- [GitHub Release](https://github.com/${{ github.repository }}/releases/tag/${{ steps.semantic_release.outputs.tag }})" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ℹ️ No Release Published" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "No release was created. This could be because:" >> $GITHUB_STEP_SUMMARY
            echo "- No relevant commits found for release" >> $GITHUB_STEP_SUMMARY
            echo "- Commits don't follow conventional commit format" >> $GITHUB_STEP_SUMMARY
            echo "- Release conditions not met" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Build Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow:** \`${{ github.workflow }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID:** \`${{ github.run_id }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Run Number:** \`${{ github.run_number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor:** \`${{ github.actor }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Event:** \`${{ github.event_name }}\`" >> $GITHUB_STEP_SUMMARY
